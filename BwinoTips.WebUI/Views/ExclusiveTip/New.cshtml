@model BwinoTips.WebUI.Models.Exclusive.ExclusiveViewModel

@{
    string action, cancel_url, buttonText, instr, glyph;
    bool isAdmin = PageData["isAdmin"];

    if (Model.ExclusiveTipId > 0)
    {
        cancel_url = Url.Action("Show", new { ExclusiveTipId = Model.ExclusiveTipId });
        action = "Update";
        buttonText = "Update Tip";
        instr = "Modify the details and click Update to apply changes";
        glyph = "fa fa-thumbs-up";
        ViewBag.Title = "Update Exclusive Tip";
    }
    else
    {
        cancel_url = Url.Action("Index");
        action = "Create";
        buttonText = "Create Tip";
        instr = "Complete the form below and click Create to add a new Tip";
        glyph = "fa fa-plus";
        ViewBag.Title = "New Exclusive Tip";
    }
}

<div class="row">

    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="card-header d-flex align-items-center justify-content-between">
                    <h2 class="fs-18 font-weight-bold mb-0">Create A New Tip!</h2>
                    <div class="inbox-toolbar btn-toolbar">
                        <div class="btn-group">
                            @Html.Bootstrap().ActionLinkButton("Back", "Index", "ExclusiveTip").Class("btn btn-danger").PrependIcon("fa fa-arrow-left").HtmlAttributes(new { style = "color:white;", title = "Homepage" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
               @using (var f = Html.Bootstrap().Begin(new Form(action, "ExclusiveTip").FormMethod(FormMethod.Post)))
               {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ExclusiveTipId)
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <div class="col-md-4 pr-md-1">
                        <div class="form-group"> 
                            <div class="font-weight-600">
                                @f.FormGroup().TextBoxFor(p => p.HomeTeam).Placeholder().Class("form-control").Label().HtmlAttributes(new { required = "", type = "text" })
                            </div>  
                        </div>
                    </div>
                    <div class="col-md-4 px-md-1">
                        <div class="form-group">
                            <div class="font-weight-600">
                                @f.FormGroup().TextBoxFor(p => p.AwayTeam).Placeholder().Class("form-control").Label().HtmlAttributes(new { required = "", type = "text" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 px-md-1">
                        <div class="form-group">
                            <div class="font-weight-600">
                                @f.FormGroup().TextBoxFor(p => p.Tip).Placeholder().Class("form-control").Label().HtmlAttributes(new { required = "", type = "text" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 pr-md-1">
                        <div class="form-group">
                            <div class="font-weight-600">
                                @f.FormGroup().TextBoxFor(p => p.Result).Placeholder().Class("form-control").Label().HtmlAttributes(new { required = "", type = "text" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 px-md-1">
                        <div class="form-group">
                            <div class="font-weight-600">
                                @f.FormGroup().DropDownListFor(p => p.LeagueId, Model.Leagues).OptionLabel("Select League").Class("form-control").Prepend(Html.Bootstrap().ActionLinkButton("New League", "New", "League").Class("btn btn-success")).HtmlAttributes(new { required = "" })
                              
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 px-md-1">
                        <div class="form-group">
                            <div class="font-weight-600">
                                @f.FormGroup().TextBoxFor(p => p.Date).Placeholder().Class("form-control").Label().HtmlAttributes(new { id = "datetimepicker1", required = "" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 pr-md-1">
                        <div class="form-group">
                            <div class="font-weight-600">
                                @f.FormGroup().TextBoxFor(p => p.Odd).Placeholder().Class("form-control").Label().HtmlAttributes(new { required = "", type = "text" })
                            </div>
                        </div>
                    </div>
                  
                 
                </div>

                <div class="card-footer">
                    <button type="submit" class="btn btn-fill btn-primary">@buttonText</button>
                </div>

               }
            </div>
         
        </div>
    </div>
</div>


@section Scripts{


    <script type="text/javascript" src="~/Scripts/jquery.min.js"></script>

    <script type="text/javascript" src="~/Scripts/moment.min.js"></script>

    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>

    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>

<script>
        $("#datetimepicker1").datetimepicker();
</script>
  
}

